using UnityEngine;
using System;
using System.Text;
using System.Collections;
using iCanScript.Internal.JSON;

namespace iCanScript.Internal.Editor.CodeGeneration {
    
    public static class CSharpFileTemplates {
        // ----------------------------------------------------------------------
        public static string FileHeader(string fileName, string className, JObject json= null, string author= null) {
            var id = json != null ?
                     "//"+json.Encode()+"\n;" :
                     "";
            var bar= "/////////////////////////////////////////////////////////////////\n";
            var h1=  "//  "+fileName+"\n"+
                     "//\n";
            var h2=  "//  Generated by iCanScript v"+iCS_EditorConfig.VersionId+"\n";
            var h3=  author == null ?
                     "" :
                     "//  Original author: "+author+"\n";
            return id+bar+h1+h2+h3+bar;
        } 
        // ----------------------------------------------------------------------
        public static string PrependJSON(JObject json, string code) {
            return "//"+json.Encode()+"\n"+code;
        }
        // ----------------------------------------------------------------------
        // Returns the JObject previously inserted in the header.
        public static JObject ExtractJSON(string fileHeader) {
            // Return null if we can't find the JSON marker.
            if(fileHeader == null) return null;
            if(!fileHeader.StartsWith("//{")) return null;
    		fileHeader= fileHeader.Substring(2);
    
            // Attempt to extract the json object.
            try {
                JObject jObject= JSON.JSON.GetRootObject(fileHeader);
                return jObject;
            }
            catch(Exception) {
                return null;
            }
        }
    }

}